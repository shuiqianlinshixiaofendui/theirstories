/**  *  This file is part of the UGE(Uniform Game Engine). *  Copyright (C) by SanPolo Co.Ltd. *  All rights reserved. * *  See http://uge.spolo.org/ for more information. * *  SanPolo Co.Ltd *  http://uge.spolo.org/ *  Any copyright issues, please contact: copr@spolo.org*//** 	此Action 负责响应摄像机的所有操作	并且，通过响应的不同事件，获取不同的node来处理事件。	当响应的事件发生改变时，delete当前的node*/define("web3d/action_new/viewpoint_action",["dojo/topic"],function(topic){			var currentNode = null;// currentNode 记录当前需要加载的node	var lastNodeName = "";// lastNodeName 上一次加载的节点名字		// 加载node(此处应该修改，判断原node和当前node是否是同一个node，如果相同则不加载)	function requireNode(nodeName,x3d){		require(["web3d/"+nodeName.split("_")[0]+"/" + nodeName], 			function(nodeName){				// 如果当前节点名字与上一次加载的节点名字不一致，才能够加载节点，否则不加载节点				if(nodeName != lastNodeName){					if(currentNode){                        if(nodeName != "operate_viewList"){                            currentNode.unload();                            currentNode = null;                        }					}					currentNode = new nodeName(x3d);					lastNodeName = nodeName;				}			}		);	}		var viewpoint_action = dojo.declare([],{		constructor : function(x3d){						// 开启/关闭绕模型操作模式			topic.subscribe("command/viewpoint_action/aroundObj",function(){				Spolo.aroundObjOperationMode = !Spolo.aroundObjOperationMode;				if(Spolo.aroundObjOperationMode){					topic.publish("command/viewpoint_action/aroundObjRotate");				}else{					if(Spolo.current_view == Spolo.view_list[0]){						topic.publish("command/viewpoint_action/translate");					}else{						topic.publish("command/viewpoint_action/fixedViewMove");					}				}			});						// 响应摄像机锁定状态			topic.subscribe("command/viewpoint_action/locked",function(state){				if(Spolo.dataSync){					var camera_json = Spolo.dataSync.get_camera_data();					camera_json.camera_locked = state;				}			});						// 当用户选择摄像机平移操作后，此处响应消息，调用node完成摄像机平移操作			topic.subscribe("command/viewpoint_action/translate",function(){                requireNode("operate_freeView",x3d);				currentNode.camera_move();			});						// 当用户选择摄像机旋转操作后，此处响应消息，调用node完成摄像机旋转操作			topic.subscribe("command/viewpoint_action/rotate",function(){				requireNode("operate_freeView",x3d);				currentNode.camera_rotate();			});						// 当用户选择摄像机旋转操作后，此处响应消息，调用node完成摄像机缩放操作			topic.subscribe("command/viewpoint_action/scale",function(){                requireNode("operate_freeView",x3d);				currentNode.camera_scale();			});						// 重置摄像机位置			topic.subscribe("command/viewpoint_action/reset",function(){				requireNode("operate_freeView",x3d);				currentNode.camera_reset();			});						// ----------------------------------------------------------------------------------------------						// 调用固定视角下的摄像机平移操作			topic.subscribe("command/viewpoint_action/fixedViewMove",function(){				requireNode("operate_fixedView",x3d);				currentNode.fixedViewMove();			});						// 调用固定视角下的摄像机旋转操作			topic.subscribe("command/viewpoint_action/fixedViewRotate",function(){				requireNode("operate_fixedView",x3d);				currentNode.fixedViewRotate();			});						// 调用固定视角下的摄像机缩放操作			topic.subscribe("command/viewpoint_action/fixedViewScale",function(){				requireNode("operate_fixedView",x3d);				currentNode.fixedViewScale();			});						// 调用固定视角下的摄像机重置操作			topic.subscribe("command/viewpoint_action/fixedViewReset",function(){				requireNode("operate_fixedView",x3d);				currentNode.fixedViewReset();			});						// 调用浏览模式下的摄像机平移操作			topic.subscribe("command/viewpoint_action/browseViewTranslate",function(){				requireNode("operate_browseView",x3d);				currentNode.browseViewTranslate();			});						// 调用浏览模式下的摄像机旋转操作			topic.subscribe("command/viewpoint_action/browseViewRotate",function(){				requireNode("operate_browseView",x3d);				currentNode.browseViewRotate();			});						// 调用浏览模式下的摄像机缩放操作			topic.subscribe("command/viewpoint_action/browseViewScale",function(){				requireNode("operate_browseView",x3d);				currentNode.browseViewScale();			});						// 调用浏览模式下的摄像机重置操作			topic.subscribe("command/viewpoint_action/browseViewReset",function(){				requireNode("operate_browseView",x3d);				currentNode.browseViewReset();			});						// 调用视角转为自由视角操作			topic.subscribe("command/viewpoint_action/toFreeView",function(){				requireNode("operate_changeView",x3d);				currentNode.toFreeView();			});						// 调用视角转为前视角操作			topic.subscribe("command/viewpoint_action/toFrontView",function(){				requireNode("operate_changeView",x3d);				currentNode.toFrontView();			});						// 调用视角转为后视角操作			topic.subscribe("command/viewpoint_action/toBackView",function(){				requireNode("operate_changeView",x3d);				currentNode.toBackView();			});						// 调用视角转为左视角操作			topic.subscribe("command/viewpoint_action/toLeftView",function(){				requireNode("operate_changeView",x3d);				currentNode.toLeftView();			});						// 调用视角转为右视角操作			topic.subscribe("command/viewpoint_action/toRightView",function(){				requireNode("operate_changeView",x3d);				currentNode.toRightView();			});						// 调用视角转为上视角操作			topic.subscribe("command/viewpoint_action/toTopView",function(){				requireNode("operate_changeView",x3d);				currentNode.toTopView();			});						// 调用视角转为下视角操作			topic.subscribe("command/viewpoint_action/toBottomView",function(){				requireNode("operate_changeView",x3d);				currentNode.toBottomView();			});						// 调用摄像机推进放大操作			topic.subscribe("command/viewpoint_action/amplify",function(){				requireNode("operate_amplifyView",x3d);				currentNode.amplify();			});                        // 添加我的视角			topic.subscribe("command/viewpoint_action/addView",function(){				requireNode("operate_viewList",x3d);				currentNode.addView();			});			// 从blender中选择的视角			topic.subscribe("command/viewpoint_action/selectViewFromBlender",function(viewname){				requireNode("operate_viewList",x3d);				currentNode.selectViewFromBlender(viewname);			});            // 从Scene中选择的视角			topic.subscribe("command/viewpoint_action/selectViewFromScene",function(viewname){				requireNode("operate_viewList",x3d);				currentNode.selectViewFromScene(viewname);			});			// 编辑我的视角			topic.subscribe("command/viewpoint_action/modifyView",function(viewname,description){				requireNode("operate_viewList",x3d);				currentNode.modifyView(viewname,description);			});			// 删除我的视角			topic.subscribe("command/viewpoint_action/deleteView",function(viewname){				requireNode("operate_viewList",x3d);				currentNode.deleteView(viewname);			});						// 调用绕物体模式摄像机旋转操作			// topic.subscribe("command/viewpoint_action/aroundObjRotate",function(){				// requireNode("operate_aroundObjView",x3d);				// currentNode.aroundObjRotate();			// });						// 调用绕物体模式摄像机缩放操作			// topic.subscribe("command/viewpoint_action/aroundObjScale",function(){				// requireNode("operate_aroundObjView",x3d);				// currentNode.aroundObjScale();			// });					},				deleteNode : function(){			if(currentNode){				currentNode.unload();				currentNode = null;			}		}		});		return viewpoint_action; 	});