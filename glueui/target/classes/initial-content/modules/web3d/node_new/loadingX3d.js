/** *  This file is part of the spp(Superpolo Platform). *  Copyright (C) by SanPolo Co.Ltd. *  All rights reserved. * *  See http://www.spolo.org/ for more information. * *  SanPolo Co.Ltd *  http://www.spolo.org/ *  Any copyright issues, please contact: copr@spolo.org**//** *  使用getObjects加载x3d场景*/define("web3d/node_new/loadingX3d",["dojo/topic", "dojo/request","widgets/Mask/Mask","web3d/Lib/syncLib", "web3d/node_new/sceneSize"],function(topic, request,Mask,syncLib, sceneSize){        var i = 0 ;                     // 记录循环    var data_length = 0 ;           // 数据长度    var scene ;                     // 当前场景中的scene    var loadInlineState = false;    // 当前inline加载状态    var jsonData;                   // 全部数据    var sync ;                      // 同步    var _x3d = null;            /**    * x3disLoading : 每次添加完inline后判断时候加载完毕，当全部加载完毕后Mask隐藏    **/    var x3disLoading = function(){        var flag = true;        var count = 0;        var old_x3dom_tick = x3dom.X3DCanvas.prototype.tick;        x3dom.X3DCanvas.prototype.tick = function(){              if((this.doc.downloadCount === 0) && (this.doc.needRender === 0) && flag){                count++;            }            if(count > 1 && flag){                flag = false;                                // 判断inline是否加载完成                loadInlineState = true;                if(loadInlineState){                                        if(i < data_length){                        createInline(jsonData[i]);                    };                    if(i == data_length){                        var timeout = setTimeout(function(){Mask.hide()},500) ;                        if(_x3d){                            var sceneSizeObj = new sceneSize(_x3d);                            topic.publish("gridHelper/setSize");                        }                    }                }            }            old_x3dom_tick.call(this);        }    }            /***    *  createInline ：创建inline    *       parameters     *               json -- 模型的信息，以及inline的url    */    var createInline = function(json){        loadInlineState = false;        if(!json || !json.data.ID){                 return ;        }        var t = document.createElement('Transform');        t.setAttribute("DEF", json.data.name) ;        t.setAttribute("id", json.data.name) ;        t.setAttribute("translation", json.data.location[0] + " " + json.data.location[1] + " " + json.data.location[2] );        t.setAttribute("scale", json.data.scale[0] + " " + json.data.scale[1] + " " + json.data.scale[2]);        t.setAttribute("rotation",json.data.rotation_axis_angle[0] + " " + json.data.rotation_axis_angle[1] + " " + json.data.rotation_axis_angle[2] + " " + json.data.rotation_axis_angle[3]) ;        // 创建Inline        var inline = document.createElement("Inline") ;        inline.setAttribute("DEF","Inline") ;        inline.setAttribute("url",json.data.referModel + ".x3d") ;           t.appendChild(inline) ;                scene.appendChild(t) ;        i++;        x3disLoading() ;            // 再次进行判断    }    /**    * getObjectFromJcr ： 从jcr中获取全部的数据    **/    var getObjectFromJcr = function(){        sync.getItemsByType("MESH",function(items){ // 照相机呢？            data_length = items.length ;            jsonData = items;            if(items.length == 0){               loadInlineState = false;               var timeout = setTimeout(function(){Mask.hide()},500) ;            }            createInline(items[i]) ;		}) ;    }    var loadingX3d = dojo.declare([],{        constructor : function(x3d){            Mask.show();       // 加载中..            _x3d = x3d;            scene = x3d.runtime.canvas.doc._viewarea._scene._xmlNode;            sync = new syncLib() ;            getObjectFromJcr() ;        },        unload : function(){                    }    });    return loadingX3d;});