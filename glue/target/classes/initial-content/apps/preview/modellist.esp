<%
/* 
 *  This file is part of the SPP(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://spp.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://spp.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
 */
 
response.setCharacterEncoding("UTF-8");
// var outstr = "";

// outstr += ("test modellist!!!") + "\n";

// response.setContentType("application/json");


	function getModelJSON(modelpath){
		var dispOption = new Packages.org.apache.sling.api.request.RequestDispatcherOptions();
		var path = modelpath + ".1.json";
		
		request.setCharacterEncoding("UTF-8");
		
		var disp = request.getRequestDispatcher(path,dispOption);
		var cache_response = new Packages.org.spolo.utils.BufferedServletResponse(response);
		cache_response.setCharacterEncoding("UTF-8");
		
		cache_response.setContentType("application/json");
		// outstr += "CharacterEncoding : " + cache_response.getCharacterEncoding() + "\n";
		// outstr += "getContentType : " + cache_response.getContentType() + "\n";
		
		var modelsJson;
		
		try
		{
			disp.forward(request,cache_response);
			var models = cache_response.getBodyContent();
			modelsJson = new Packages.org.apache.sling.commons.json.JSONObject(models);
			return modelsJson;
		}
		catch(e)
		{
			// out.println(path);
			return null;
		}
		
	}

	function modelist(start,length,startmodelindex)
	{

		var jsonobj = new Packages.org.apache.sling.commons.json.JSONObject();

		var modelnode = currentNode["model"];
	
		var models = modelnode.getNodes();

		for(var i = start; (i < (start + length)) && (i < models.length); i++)
		{
	
				var model = models[i];
				
				var modelpath = model["modelpath"];
				
				if(modelpath != undefined)
				{
					var modelsJSON = getModelJSON(modelpath);
					if(modelsJSON != null)
					{
						jsonobj.put(modelpath, modelsJSON);
					}
					else
					{
						length++;
					}
				}
		}
		
		jsonobj.put("count", models.length);
		
		if(startmodelindex != null)
		{
			jsonobj.put("startmodelindex", startmodelindex);
		}
		
		var jsonstring = jsonobj.toString();

		return jsonstring;

	}
	
	
	function getstart(startmodelpath)
	{
		var modelnode = currentNode["model"];
	
		var models = modelnode.getNodes();

		for(var i = 0; i < models.length; i++)
		{
	
				var model = models[i];
				
				var modelpath = model["modelpath"];
				
				if(modelpath == startmodelpath)
				{
					return i;
				}
		}
		
		return -1;
		
	}


	var start = request.getRequestParameter("start");
	var length = request.getRequestParameter("length");
	var startmodelpath = request.getRequestParameter("startmodelpath");
	
	if(start == null)
	{
		start = 0;
	}
	
	if(length == null)
	{
		length = 50;
	}
	
	start = Number(start);
	
	length = Number(length);
	
	var startmodelindex = null;
	
	if(startmodelpath != null)
	{
		startmodelpath = String(startmodelpath);
		var st = getstart(startmodelpath);
		if(st != -1)
		{
			startmodelindex = st;
		}
	}
	
	
	var jsonstring = modelist(start,length,startmodelindex);
	
	response.setCharacterEncoding("UTF-8");
	out.print(jsonstring);
	response.flushBuffer();

%>