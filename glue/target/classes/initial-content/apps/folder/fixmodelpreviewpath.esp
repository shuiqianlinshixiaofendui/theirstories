<%
/**
 *  This file is part of the spp(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://www.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://www.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
**/

response.setCharacterEncoding("UTF-8");
// 修复model 中添加关联的效果图路径
// /content/modellib/modelxxx previewpath : /content/previewlib/scenexx

// 1. 修复/content/users/userxxx/scenelib/scenexxx/model/modelxxx

// 2. 修复/content/modellib/modelxxx


// 首先获取所有带modelpath 的数据，然后根据modelpath 的值，将对应的model 增加一个previewpath 的属性，其值就是效果图集路径

//var slingRepos = sling.getService(Packages.org.apache.sling.jcr.api.SlingRepository);
//var adminSession = slingRepos.loginAdministrative(null);

var fixcount = 0; // 统计处理的数据数
fixmodelpreviewpath();
out.println(fixcount);

function fixmodelpreviewpath(){	
	var language = "xpath";
	var expression = "/jcr:root/content//*[jcr:like(@modelpath,'/content%')]";
	var queryManager = currentNode.getSession().getWorkspace().getQueryManager();
	var qry = queryManager.createQuery(expression,language);
	
	try{
		var result = qry.execute().getNodes();
	}
	catch(e){
		out.println("{error}");
	}
	
	// 遍历所有的model
	while(result.hasNext()){
		var node = result.nextNode();
		
		// modelpath = /content/previewlib/scene2013441352382677040875/previewpreview/model/j1457
		var modelpath = node.getPath();
		out.println(modelpath);
		// modelspath = /content/previewlib/scene2013441352382677040875/previewpreview/model
		var modelspath = modelpath.substring(0,modelpath.lastIndexOf("/"));
		out.println(modelspath);
		// previewpath = /content/previewlib/scene2013441352382677040875/previewpreview
		var previewpath = modelspath.substring(0,modelspath.lastIndexOf("/"));
		out.println(previewpath);
		// previewspath = /content/previewlib/scene2013441352382677040875
		var previewspath = previewpath.substring(0,previewpath.lastIndexOf("/"));
		out.println(previewspath);
		
		
		out.println(node["modelpath"]);
		var modelnode = node.getAncestor(0).getNode(node["modelpath"].substring(1));
		out.println(modelnode.getPath());
		
		//modelnode.setProperty("previewpath",previewspath);	
		//modelnode["previewpath"] = [previewspath];	
		
		var resourceResolver = request.getResourceResolver();
		var resource = resourceResolver.getResource(modelnode.getPath());
		//var resource = resourceResolver.getResource("/content/users/testMulti/test");
		if(modelnode.previewpath==undefined){
			var arr = [];
			arr.push(previewspath);
		}else{
			var arr = modelnode.previewpath;
			arr.push(previewspath);
		}
		
		var valueMap = (resource.adaptTo(Packages.org.apache.sling.api.resource.PersistableValueMap));
		var stringArray = Packages.java.lang.reflect.Array.newInstance(java.lang.String, arr.length);
		for(var i = 0; i<arr.length;i++){
			stringArray[i] = new Packages.java.lang.String(arr[i]);
		}
		valueMap.put("previewpath", stringArray);
		valueMap.save();
	
		// 进行保存
		try{
			modelnode.save();
			fixcount ++;
			//fixmodelInfo.push(modelStatus.toString());
		}catch(e){
			out.println(e);
		}	
		
		
	}
}

%>