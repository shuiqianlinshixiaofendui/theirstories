<%
/**
 *  This file is part of the spp(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://www.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://www.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
**/

response.setCharacterEncoding("UTF-8");
// 获取某一个用户的对所有可能的资源所具有的权限
// 1. 获取所有的可能资源 'sling:resourceType' = 'folder'
// 2. 在这些节点下查看 rep:police 节点中的用户
// 3. 封装方法,判断用户所具有的权限是否是 a. admin(超级用户) b. 编辑用户 c. 普通用户
// 4. 将这些权限的内容封装到每一个用户下，将其作为用户的一个属性
// 5. 以上的4 操作，应该在每一次给用户进行权限赋予的时候，就将这些权限以属性的形式，保存到/content/users/userxxx

	var user = request.getParameter("user");

	getUserPermission(user);
	
	// 获取用户对某一个资源所具有的权限
	function getUserPermission(user){
		
		var language = "xpath";
		var expression = "/jcr:root/content//*[jcr:contains(@rep:principalName,\"" + user + "\")]";
		// out.println(expression);
		var queryManager = currentNode.getSession().getWorkspace().getQueryManager();
		var qry = queryManager.createQuery(expression,language);
		
		try{
			var result = qry.execute().getNodes();
		}
		catch(e){
			out.print("{\"error\":\""+ e.toString() +"\"}");
		}
		
		var jsonobj = new Packages.org.apache.sling.commons.json.JSONObject();
		// 遍历所有的model
		while(result.hasNext()){
			var node = result.nextNode();
			var nodepath = node.getPath();
			// out.println(nodepath);
			var resourcepath = nodepath.substring(0,nodepath.indexOf("/rep:policy/allow"));
			// out.println(resourcepath);
			// for(var i=0; i<node["rep:privileges"].length;i++ ){
				// out.println(node["rep:privileges"][i]);
			// }
			var permissionArray = node["rep:privileges"];
			
			// 判断1 权限
			if(canUserRead(permissionArray)){
				jsonobj.put(resourcepath, "userRead");
			}	
			// 判断2 权限
			if(canUserEdit(permissionArray)){
				jsonobj.put(resourcepath, "userEdit");
			}
			// 判断3 权限
			if(canUserAdmin(permissionArray)){
				jsonobj.put(resourcepath, "userAdmin");
			}
		}
		if(jsonobj.length()>0){
			out.print(jsonobj.toString());
			//return jsonobj.toString();
		}else if(jsonobj.length()==0){
			out.print("{\"permisssion\":\"none\"}");
		}
	}
	
	// 是否具有1 权限：只读 TODO: 根据需求再进行实现
	function canUserRead(permissionArray){
		
		var userEditArray = ["jcr:read"];
		
		//return permissionComp(userEditArray, permissionArray);	
		return false; // 1 权限可以不用显示给用户了
	}
	
	// 是否具有2 权限：可读可写不可删
	function canUserEdit(permissionArray){
		
		var userEditArray = ["jcr:read",
			"jcr:lifecycleManagement",
			"jcr:nodeTypeManagement",
			"jcr:modifyProperties",
			"jcr:modifyAccessControl",
			"jcr:versionManagement",
			"jcr:readAccessControl",
			"jcr:retentionManagement",
			"jcr:lockManagement"];
		

		return permissionComp(userEditArray, permissionArray);	
	}
	// 是否具有3 权限：管理员权限
	function canUserAdmin(permissionArray){
		
		var userAdminArray = ["jcr:all"];

		return permissionComp(userAdminArray, permissionArray);	
	}
	
	// 比较用户权限 和已知权限组的比较
	function permissionComp(permissionArray, usersPerArray){
		if (permissionArray.length != usersPerArray.length) {
			return false; 
		}
		var a = permissionArray.sort(),
			b = usersPerArray.sort();
		for (var i = 0; usersPerArray[i]; i++) {
			//if (a[i] !== b[i]) { 
			if (a[i] != b[i]) { 
				return false;
			}
		}
		return true;	
	
	}

%>