<%
/**
 *  This file is part of the spp(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://www.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://www.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
**/

response.setCharacterEncoding("UTF-8");

// 清空 /content/modellib 目录下的所有数据
// 清空 /content/previewlib 目录下的所有数据
// 清空 /content/users/userxxx/previewlib 目录下的所有数据
// 清空 /content/users/userxxx/scenelib 目录下的所有数据
clearNodesByPath("/content/modellib");
clearNodesByPath("/content/previewlib");
clearUsersFolder();

// 清空指定目录下的所有节点
function clearNodesByPath(nodePath){
	var session = currentNode.getSession();
	var node = null;
	if(session.nodeExists(nodePath)){
		node = session.getNode(nodePath);
	}
	if(node==null)return;
	var nodes = node.getNodes();
	for(var i in nodes){
		if(nodes[i].getName()!="rep:policy"){
			out.println(nodes[i].getPath());
			nodes[i].remove();
		}
	}
	session.save();
}

// 添加用户在/content/users/ 下
function clearUsersFolder(){
	var usersPath = "/content/users";
	var username;
	var userList = getSysUsers();
	while(userList.hasNext()){
		username = userList.next();
		clearNodesByPath(usersPath+"/"+username+"/previewlib");
		clearNodesByPath(usersPath+"/"+username+"/scenelib");
	}
	out.println("done!");			
}

// 获取系统下所有用户
function getSysUsers(){
	var cache_response = forward("/system/userManager/user.tidy.1.json");
	var users = cache_response.getBodyContent();
	var usersJson = new Packages.org.apache.sling.commons.json.JSONObject(users);
    var keys = usersJson.keys();
	return keys;
}

// 请求一个URL并获取结果
function forward(path)
{
     var dispOption = new Packages.org.apache.sling.api.request.RequestDispatcherOptions();
     var disp = request.getRequestDispatcher(path,dispOption);
     var cache_response = new Packages.org.spolo.utils.BufferedServletResponse(response);
     disp.forward(request,cache_response);
     return cache_response;
}



%>