<%

/* 
 *  This file is part of the SPP(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://spp.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://spp.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
 */
 
var GVAR_LoadLibrary = true;
load("/apps/util/sysconfig.esp");

//获取路径信息。
var RequestPathInfo = request.getRequestPathInfo();
// out.println("RequestPathInfo : " + RequestPathInfo);
//获取mime map service.
var mimeService = sling.getService(Packages.org.apache.sling.commons.mime.MimeTypeService);

//首先尝试获取suffix。
var extension;
var localPath = RequestPathInfo.getSuffix();
//如果无效，尝试获取selector.
if(!localPath || localPath.length() == 0)
{
	localPath = RequestPathInfo.getSelectorString();
	//此时extension为uri的extension.
	extension = RequestPathInfo.getExtension();
}
//todo，错误处理。
if(!localPath || localPath.length() == 0)
{
	var localPath  = String(request.getRequestParameter("texname"));
}

//处理localpath
localPath = String(localPath);
var pathlen = localPath.length;
// out.println("pathlen : " + pathlen);
if(localPath[pathlen - 1] == "/")
{
	localPath = localPath.substr(0,pathlen - 1);
}
// out.println("localPath : " + localPath);
if(localPath[0] == "/")
{
	localPath = localPath.substr(1);
}
// out.println("localPath : " + localPath);
//开始检查本地路径。
//TODO: 构造File对象，并检查不会索引父级目录。
var rootPath = GVAR_system.getNodePath(currentNode,false) + GVAR_system.path_separator + "data" + GVAR_system.path_separator + "diffuse";
// out.println("rootPath : " + rootPath);
var imagePath = rootPath + GVAR_system.path_separator + localPath;
// out.println("imagePath : " + imagePath);
var imageFile = new Packages.java.io.File(imagePath);
var CanonicalPath = imageFile.getCanonicalPath();
if(String(CanonicalPath) == String(imagePath))
{
	if(imageFile.exists())
	{
		var MIME = mimeService.getMimeType(extension);
		response.setContentType(MIME);
		response.setHeader("content-length", imageFile.length());
		var inputstream = new Packages.java.io.FileInputStream(imageFile);
		//out.println("inputstream : " + inputstream);
		var count = Packages.org.apache.commons.io.IOUtils.copyLarge(inputstream,response.getOutputStream());
		Packages.java.lang.System.out.println("copy " + count + " bytes from " + imagePath);  
	}
}
else
{
	out.println("texture path error!!!");
}

%>