<%

/* 
 *  This file is part of the SPP(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://spp.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://spp.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
 */
 
 
response.setCharacterEncoding("UTF-8");

var GVAR_LoadLibrary = true;
	
load("/apps/util/sysconfig.esp");
load("/apps/util/blendercgi.esp");

try{
   response.setContentType("text/xml");
   
   var nodePath = GVAR_system.getNodePath(currentNode,true);
   if(nodePath)
   {
      var x3dCachePath;
      var x3dCacheFile;
      var inputstream;
      var hasCache = true;
      
      var cachePath = nodePath + GVAR_system.path_separator + "cache";
      var cacheDir = new Packages.java.io.File(cachePath);
      if(!cacheDir.exists())
      {
         hasCache = false;
      }else{
         x3dCachePath = cachePath + GVAR_system.path_separator + "cache.x3d";
         x3dCacheFile =  new Packages.java.io.File(x3dCachePath);
         if(x3dCacheFile.exists())
         {
            inputstream = new Packages.java.io.FileInputStream(x3dCacheFile);
            var count = Packages.org.apache.commons.io.IOUtils.copyLarge(inputstream,response.getOutputStream());
            Packages.java.lang.System.out.println("copy " + count + " bytes from " + x3dCachePath);
            inputstream.close();
         }else{
            hasCache = false;
         }
      }
      
      if(!hasCache)
      {
         x3dCachePath = GVAR_bcgi.forward({useEmptyBlend : false});
         x3dCacheFile =  new Packages.java.io.File(x3dCachePath);
         inputstream = new Packages.java.io.FileInputStream(x3dCacheFile);
         var count = Packages.org.apache.commons.io.IOUtils.copyLarge(inputstream,response.getOutputStream());
         Packages.java.lang.System.out.println("copy " + count + " bytes from " + x3dCachePath);
         inputstream.close();
      }
   }
}catch(e){
   response.setContentType("application/json");
   var error = new Packages.org.apache.sling.commons.json.JSONObject();
   error.put("error", e);
   out.write(error)
}
%>