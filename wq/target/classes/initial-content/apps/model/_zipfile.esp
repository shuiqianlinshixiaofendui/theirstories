<%

/* 
 *  This file is part of the SPP(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://spp.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://spp.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
 */
 
 
response.setCharacterEncoding("UTF-8");
 
var GVAR_LoadLibrary = true;
	
load("/apps/model/formatlist.esp");
load("/apps/model/_zipfolder.esp");
load("/apps/util/sysconfig.esp");

function modelzipfile(Node,formats)
{

	var support_formats = formatlist(Node);
	
	var formatarr = formats.split(",");
	
	if(formatarr.length < 2)
	{
		var format = formatarr[0];
		if(support_formats[format] == "support")
		{
			// out.println("zip " + format);
			
			var nodePath = GVAR_system.getNodePath(Node,true);

			// out.println("nodePath : " + nodePath);

			var dataPath = nodePath + GVAR_system.path_separator + "data";
			
			var filePath = dataPath + GVAR_system.path_separator + "main." + format;
			
			var mainfile = new Packages.java.io.File(filePath);
			
			if(mainfile.exists())
			{

				var outfilePath = nodePath + GVAR_system.path_separator + "cache" + GVAR_system.path_separator + format + ".zip";
				
				var outfile =  new Packages.java.io.File(outfilePath);
				if(outfile.exists())
				{
					// out.println("download file : " + outfilePath);
				}
				else
				{
					outfile.createNewFile();
					var outPath = nodePath + GVAR_system.path_separator + "cache" + GVAR_system.path_separator + format;
					
					var outDir = new Packages.java.io.File(outPath);
					
					if(!outDir.exists())
					{
						// out.println("mkdirs");
						outDir.mkdirs();
					}
					else
					{
						FileUtils.forceDelete(outDir);
						outDir.mkdirs();
						
					}
					
					// out.println("copy file");
						
					FileUtils.copyFileToDirectory(mainfile,outDir);
					
					var diffusePath = dataPath + GVAR_system.path_separator + "diffuse";
			
					var diffuseDir = new Packages.java.io.File(diffusePath);
					if(diffuseDir.exists())
					{
						// out.println("copy diffuseDir");
						FileUtils.copyDirectoryToDirectory(diffuseDir,outDir);
					}
					
					zipFolder(outfile, outDir);
					
					FileUtils.forceDelete(outDir);
					
				}
			}
			
			return outfile;

		}
		
		if(support_formats[format] == "export")
		{
			// out.println("zip " + format);
			
			var addmodel = GVAR_bcgi.forward({cgi : "model/" + format + "_zip.py", node : Node, useEmptyBlend : false});
			
			var nodePath = GVAR_system.getNodePath(Node,true);

			var outfilePath = nodePath + GVAR_system.path_separator + "cache" + GVAR_system.path_separator + format + ".zip";
			
			var outfile =  new Packages.java.io.File(outfilePath);
			if(outfile.exists())
			{
				return outfile;
			}
		
		}
	}
	else
	{
		for(ifmt in formatarr)
		{
			var format = formatarr[ifmt];
			if(support_formats[format] == "support")
			{
				// out.println("zip " + format);
				
				var nodePath = GVAR_system.getNodePath(Node,true);

				// out.println("nodePath : " + nodePath);

				var dataPath = nodePath + GVAR_system.path_separator + "data";
				
				var filePath = dataPath + GVAR_system.path_separator + "main." + format;
				
				var mainfile = new Packages.java.io.File(filePath);
				
				if(mainfile.exists())
				{

					var outfilePath = nodePath + GVAR_system.path_separator + "cache" + GVAR_system.path_separator + format + ".zip";
					
					var outfile =  new Packages.java.io.File(outfilePath);
					if(outfile.exists())
					{
						// out.println("download file : " + outfilePath);
					}
					else
					{
						outfile.createNewFile();
						var outPath = nodePath + GVAR_system.path_separator + "cache" + GVAR_system.path_separator + format;
						
						var outDir = new Packages.java.io.File(outPath);
						
						if(!outDir.exists())
						{
							// out.println("mkdirs");
							outDir.mkdirs();
						}
						else
						{
							FileUtils.forceDelete(outDir);
							outDir.mkdirs();
							
						}
						
						// out.println("copy file");
							
						FileUtils.copyFileToDirectory(mainfile,outDir);
						
						var diffusePath = dataPath + GVAR_system.path_separator + "diffuse";
				
						var diffuseDir = new Packages.java.io.File(diffusePath);
						if(diffuseDir.exists())
						{
							// out.println("copy diffuseDir");
							FileUtils.copyDirectoryToDirectory(diffuseDir,outDir);
						}
						
						zipFolder(outfile, outDir);
						
						FileUtils.forceDelete(outDir);
						
					}
				}
				
				return outfile;

			}

			if(support_formats[format] == "export")
			{
				// out.println("zip " + format);
				
				var addmodel = GVAR_bcgi.forward({cgi : "model/" + format + "_zip.py", node : Node, useEmptyBlend : false});
				
				var nodePath = GVAR_system.getNodePath(Node,true);

				var outfilePath = nodePath + GVAR_system.path_separator + "cache" + GVAR_system.path_separator + format + ".zip";
				
				var outfile =  new Packages.java.io.File(outfilePath);
				if(outfile.exists())
				{
					return outfile;
				}
			
			}
		}
	}
	
	return null;
}

%>