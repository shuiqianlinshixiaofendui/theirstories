<%

/* 
 *  This file is part of the SPP(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://spp.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://spp.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
 */
 
/** @brief 本文件维护了场景导入工具类．

 如下全局变量被定义和使用:
 GVAR_LoadLibrary : 必须被设置，否则视同直接从客户端访问。这将直接返回空。
 
 使用方法: <code>

	var GVAR_LoadLibrary = true;
	load("/apps/utils/blender.esp");
	var blender = new GVAR_blender();
	//新建一个blender文件．
	var blender = new GVAR_blender(nodePath);
	if(GVAR_blender.canImport(filepath))
	{
		//本导入一定是merge模式．返回请求的资源列表．
		var booleanflag = blender.importfile(filepath);
	}
	
	//获取直接的依赖资源．不仅仅是图片，也包括了外部模型．可以传入一个参数(true)，只返回缺失资源．
	var requiredResourcelist = blender.getDepResource();
	var itemArray = blender.getItems();
	//如果item不存在，则创建之．
	var itemArray = blender.updateItem(itemObject or itemArray);
	</code>
*/

var GVAR_blender;

(function()
{
	if(!GVAR_blender && GVAR_LoadLibrary)
	{
		GVAR_blender = function(nodepath)
		{
			this._nodepath = nodepath;
			GVAR_blender.importfunc = {};
		}
		
		GVAR_blender.prototype.importfile = function(filepath){
			var ext = Packages.org.apache.commons.io.FilenameUtils.getExtension(filepath);
			ext = ext.toLowerCase();
			//根据后缀确定导入脚本。
			out.println("<BR>importfile="+filepath + "<BR>");
			if(!GVAR_blender.importfunc[ext])
			{//尝试加载import ext format的代码．这里不需要检查文件存在性，如果出错，直接抛出异常．
				GVAR_LoadLibrary = true;
				load("/apps/utils/import/" + ext + ".esp");
			}
			//如果文件未定义，这里直接抛出异常．
			return GVAR_blender.importfunc[ext].call(this,filepath);
		};

		GVAR_blender.canImport = function(filepath){
			var ext = Packages.org.apache.commons.io.FilenameUtils.getExtension(filepath);
			if(ext.length == 0)
				return false;
			ext = ext.toLowerCase();
			//根据后缀确定导入脚本。
			if(ext == "max" || ext == "blend" || ext == "obj" || ext == "ocs" || ext == "blend")
			{
				return true;
			}
			return false;
		};
	}
}());

%>