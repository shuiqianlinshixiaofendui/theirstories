<%
/* 
 *  This file is part of the SPP(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://spp.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://spp.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
 */

var GVAR_LoadLibrary = true;
load("/apps/util/file.esp");

function _JSONKeyValid(k)
{
   if(k.equals("brandPath") || k.equals("categoryPath") || k.equals("madeOfPath") || 
      k.equals("stylePath") || k.equals("price") || k.equals("resourceName") ||
      k.equals("keyInfo") || k.equals("introduction")){
      return true;
   }
   return false;
}

function importModelData(sceneNode, directory, jsonPath)
{
   var node = currentNode;
   if(sceneNode){
      node = sceneNode;
   }
   
   var modelsJSONFilePath = jsonPath;
   var modelsJSONFile = new Packages.java.io.File(modelsJSONFilePath);
   var modelsJSONString = Packages.org.apache.commons.io.FileUtils.readFileToString(modelsJSONFile, "UTF-8");
   var modelsJSON = new Packages.org.apache.sling.commons.json.JSONObject(modelsJSONString);

   var model = node.getNode("model");
   var modelNodes = model.getNodes();
   var modelNodesLength = modelNodes.length;

   for(var i = 0; i < modelNodesLength; ++i)
   {
      var modelNode = modelNodes[i];
      var modelID = modelNode["ID"];
      if(modelID){
      
         if(modelsJSON.has(modelID)){
         
            var modelJSON = modelsJSON.get(modelID);
            var modelProps = modelNode.getProperties();
            for(var j in modelProps)
            {
               var modelProp = modelProps[j];
               var modelPropName = modelProp.getName();
               if(_JSONKeyValid(modelPropName)){
                  if(modelJSON.has(modelPropName)){
                     var backPropValue = modelJSON.get(modelPropName);
                     modelNode.setProperty(modelPropName, backPropValue);
                  }else{
                     modelProp.remove();
                  }
               }
            }
            if(modelJSON.has("preview")){
               var backPreName = modelJSON.getString("preview");
               var backPreFile = GVAR_File.listFiles(directory, backPreName, true)[0];
               var modelPath = GVAR_system.getNodePath(modelNode, false);
               if(modelPath){
                  var modelDataPath = modelPath + GVAR_system.path_separator + "data";
                  var modelPreFilePath = modelDataPath + GVAR_system.path_separator + "preview.jpg";
                  var modelPreFile = new Packages.java.io.File(modelPreFilePath);
                  Packages.org.apache.commons.io.FileUtils.copyFile(backPreFile, modelPreFile);
               }                       
            }            
         }
      }
   }
   
   node.save();
}
%>