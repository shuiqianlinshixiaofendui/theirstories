<%
/* 
 *  This file is part of the SPP(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://spp.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://spp.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
 */

	var GVAR_LoadLibrary = true;
    
	load("/apps/util/sysconfig.esp");
    
    load("/apps/image/_resize.esp");

	//request传参
	var srcImage = request.getRequestParameter("srcImage");


	var command = request.getRequestParameter("command");

	var commandPara = request.getRequestParameter("commandPara");
    
	var destImage = request.getRequestParameter("destImage");

	var clearCache = request.getRequestParameter("clearCache");
    
    var keepSize = request.getRequestParameter("keepSize");
    clearCache = 1;
	//获取字符编码，方便中文
	var characterEncoding = request.getCharacterEncoding();

	//判断是否是直接调用此方法
	if(srcImage != null)
	{
        srcImage = Packages.org.apache.commons.io.IOUtils.toString(srcImage.getString().getBytes(characterEncoding), 'utf-8');
		
	}else if(srcImage == null && command != null){
		//判断srcImage是否是传参
        var testImagePath = GVAR_system.getNodePath(currentNode,true);

		var files1 = new Packages.java.io.File(testImagePath).listFiles();

		for(var i = 0; i < files1.length; i++)
		{
			if(!files1[i].isDirectory())
			{
				srcImage = files1[i].getPath();
				
				break;
			}
		}
	}

	if(destImage != null)
	{
        destImage = Packages.org.apache.commons.io.IOUtils.toString(destImage.getString().getBytes(characterEncoding), 'utf-8');
	}

	var previewPath = GVAR_system.getNodePath(currentNode,true);

	var previewDir = new Packages.java.io.File(previewPath);

	var files = previewDir.listFiles();
	//得到需要转换的源文件
	for(var i = 0; i < files.length; i++)
	{
		if(!files[i].isDirectory())
		{
			var previewFile = files[i];
			
			break;
		}
	}
	//设置保存位置
	if(previewFile && previewFile.exists())
	{
        var mimeService = sling.getService(Packages.org.apache.sling.commons.mime.MimeTypeService);

		if(srcImage == null && command == null && commandPara == null && destImage == null)
		{
            srcImage = previewFile.getPath();
            destImage = previewFile.getName();
            
            if(!commandPara){
                commandPara = "235x235";
            }
		}
        var newPreviewFile = new Packages.java.io.File(previewPath + "/cache/" + destImage);
        
        if(clearCache != null)
        {
            if(newPreviewFile.exists())
            {
                newPreviewFile["delete"]();
            }
        }
        if (!newPreviewFile.exists())
        {
            var newfile = new Packages.java.io.File(previewPath + "/cache/");
            
            newfile.mkdirs();
            
            resizeSave(srcImage,commandPara,destImage,previewPath);
        }
        
        if(!keepSize){
            previewFile = newPreviewFile;
        }
        
        var MIME = mimeService.getMimeType(previewFile);
        
        response.setContentType(MIME);
        
        response.setHeader("content-length", previewFile.length());
        
        var inputstream = new Packages.java.io.FileInputStream(previewFile);
        
        var count = Packages.org.apache.commons.io.IOUtils.copyLarge(inputstream,response.getOutputStream());

	}

%>