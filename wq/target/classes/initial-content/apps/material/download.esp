<%
/* 
 *  This file is part of the SPP(Superpolo Platform).
 *  Copyright (C) by SanPolo Co.Ltd.
 *  All rights reserved.
 *
 *  See http://spp.spolo.org/ for more information.
 *
 *  SanPolo Co.Ltd
 *  http://spp.spolo.org/
 *  Any copyright issues, please contact: copr@spolo.org
 */

response.setCharacterEncoding("UTF-8");

var GVAR_LoadLibrary = true;
load("/apps/util/sysconfig.esp");
load("/apps/util/file.esp")

try {
    var nodePath = GVAR_system.getNodePath(currentNode, false);
    if (nodePath) {
        var dataPath = nodePath + GVAR_system.path_separator + "data";
        var cachePath = nodePath + GVAR_system.path_separator + "cache";
        var previewPath = nodePath + GVAR_system.path_separator + "preview";
        var matZipPath = cachePath + GVAR_system.path_separator + "mat.zip";

        var dataDir = new Packages.java.io.File(dataPath);
        var cacheDir = new Packages.java.io.File(cachePath);
        var previewDir = new Packages.java.io.File(previewPath);
        var matZipFile = new Packages.java.io.File(matZipPath);
        //out.println(previewDir);
        if (!cacheDir.exists()) {
            cacheDir.mkdirs();
        }

        var zipName = currentNode["resourceName"] ? currentNode["resourceName"] : currentNode.getName();
        zipName = new Packages.java.net.URLEncoder.encode(zipName, "UTF-8")

        response.setContentType("application/zip");

        if (!request.getParameter("attach")) {
            response.setHeader("Content-Disposition", "attachment; filename=\"" + zipName + ".zip\"");
        }

        if (!matZipFile.exists()) {

            var previewImage = previewDir.listFiles();
            //判断文件格式，如果是文件夹则跳过
            for (var i = 0; i < previewImage.length; i++) {
                if(previewImage[i].toString().indexOf('.') != -1) {
                    var extension = previewImage[i].toString().substring(previewImage[i].toString().indexOf('.') + 1);
                    var dataDst = new Packages.java.io.File(dataPath + GVAR_system.path_separator + "preview." + extension);
                    //不是文件夹，复制preview图片文件 
                    Packages.org.apache.commons.io.FileUtils.copyFile(previewImage[i], dataDst);
                    break;
                }
            }
            //添加一个txt 里面放着resourceName 在dataDir下创建materialname.txt
            var materialPath = dataPath + GVAR_system.path_separator + "materialname.txt";
            var materialTxtFile = new Packages.java.io.File(materialPath);
            var materialTxt = new Packages.java.io.FileWriter(materialTxtFile);
            //文件写入 保存
            materialTxt.write(currentNode.resourceName,0,currentNode.resourceName.length);
            materialTxt.close();
            
            //压缩
            if (!GVAR_system.hasTool("7za")) {
                var files = GVAR_File.listFiles(dataDir, "*", true);
                var zos = new Packages.java.io.FileOutputStream(matZipFile);
                GVAR_File.zipFiles(zos, files);
            } else {
                GVAR_system.runTool("7za", ["-mcu=on", "a " + matZipPath + " " + dataPath + GVAR_system.path_separator + "*"]);
            }
        }

        var inputstream = new Packages.java.io.FileInputStream(matZipFile);
        Packages.org.apache.commons.io.IOUtils.copyLarge(inputstream, response.getOutputStream());
    } else {
       throw Packages.java.io.FileNotFoundException("Can not find Material");
    }
} catch (FileNotFoundException) {
    response.sendError(404, FileNotFoundException.message);
}
%>