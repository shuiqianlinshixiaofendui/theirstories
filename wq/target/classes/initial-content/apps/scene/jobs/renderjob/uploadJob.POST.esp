<%
var GVAR_LoadLibrary = true;

load("/apps/util/sysconfig.esp");
load("/apps/util/request.esp");
load("/apps/util/file.esp");
load("/apps/scene/jobs/jobUtil.esp");

response.setCharacterEncoding("UTF-8");
response.setContentType("text/html");

out.println("<html> <body> "); 
out.println("<textarea>");
//响应的json字符串
var r1='{"result":"false","reason":"没有权限！"}';
var userID=currentNode.getSession().getUserID();
//生成jobs节点对应的文件路径
if(userID && !(userID=="anonymous")){
	
	var useNginx_str = request.getParameter('useNginx');
	var useNginx=false;
	if(useNginx_str == "true"){
		useNginx = true;
	}		
	//标记参数是否错误
	var badRequest=false;
	//判断请求中是否有上传的文件
	var uploadFileName;
	var nodesPath = GVAR_system.getNodePath(currentNode,true);
	//临时文件夹
	var tempDir = GVAR_File.createTempFolder(Packages.java.io.File(nodesPath).getParent());
	//上传的文件
	var uploadFile;
	//下面的代码将上传的文件copy到temp临时目录下
	if(useNginx){
		var upfileinfo = Packages.org.spolo.apps.util.UploadFileInfo.getNginxUploadInfo(request);
		if(!upfileinfo || upfileinfo.length<1){
			badRequest = true;
		}else{
			//现将上传的文件copy到另一个zip文件中，因为从nginx copy来的文件名称没有后缀（不知道原因），则在解压时会出错
			//所以先将文件copy到temp目录中的以上传文件命名的文件中
			var ui = upfileinfo[0];
			uploadFileName = ui.originalname;
			var uploadFile = new Packages.java.io.File(ui.localfilepath);
			var importFile = new Packages.java.io.File(tempDir.getPath() + GVAR_system.path_separator + uploadFileName);
			if(!importFile.exists()){
				importFile.createNewFile();
			}
			Packages.org.apache.commons.io.FileUtils.copyFile(uploadFile,importFile);
			uploadFile = importFile;
		}
	}else{
		var lastFileParam;
		GVAR_uploader.foreach(function(name,param){
			if(!param.isFormField()){
				lastFileParam = param;
			}
		});
			uploadFileName = lastFileParam.getFileName();
			uploadFile = GVAR_uploader.copyFile(lastFileParam,tempDir.getPath());
	}	
	var jobInfo = {};  
	//获取参数
	jobInfo["render"] = request.getParameter('render');
	jobInfo["email"] = request.getParameter('email');
	jobInfo["resultFileName"] = request.getParameter('resultFileName');
	jobInfo["target"] = request.getParameter('target');
	jobInfo['pass'] = request.getParameter('pass');
	jobInfo['cameraName'] = request.getParameter('cameraName');
	if(!jobInfo['cameraName']){
		badRequest = true;
		r1='{"result":"false","reason":"request parameter  not found:\"cameraName\""}'
	}
	if(!uploadFileName){
		r1='{"result":"false","reason":"请求时file文件没有上传成功，filename："'+uploadFileName+'"}';
		badRequest=true;
	}else{
		jobInfo["assetsFile"] = uploadFileName;
	}
	//将获取的null值删除
	for(var key in jobInfo){
		if(!jobInfo[key]){
			delete jobInfo[key];
		}
	}
	// job节点对象
	if(!badRequest){
		var result = JobUtil.createRenderJobWithAssets(jobInfo,currentNode,uploadFile);
		if(result.result){
			r1='{"result":"true","jobInfo":'+result.jobInfo.toString()+'}'
		}else{
			r1='{"result":"false","reason":"'+result.reason+'"}'
		}
	}
	Packages.org.apache.commons.io.FileUtils.deleteDirectory(tempDir);
}	
out.write(r1);
out.println("</textarea>");
out.println("</body></html>");  
%>